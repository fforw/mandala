{"version":3,"sources":["webpack://Demo/webpack/bootstrap","webpack://Demo/./src/index.js","webpack://Demo/./src/mandala.vert","webpack://Demo/./src/mandala.frag"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Math","sqrt","PI","canvas","gl","u_time","u_width","u_height","config","width","height","main","time","uniform1f","drawElements","TRIANGLES","indices","length","UNSIGNED_SHORT","requestAnimationFrame","vertices","resize","ev","window","innerWidth","innerHeight","viewport","onload","document","getElementById","vertex_buffer","getContext","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","Index_Buffer","ELEMENT_ARRAY_BUFFER","Uint16Array","vertShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragShader","FRAGMENT_SHADER","error","getShaderParameter","COMPILE_STATUS","console","getShaderInfoLog","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getUniformLocation","useProgram","coord","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","clearColor","enable","DEPTH_TEST","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","addEventListener","getProgramInfoLog"],"mappings":"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","file":"bundle-main-ab4c82ecbb037cb03157.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// noinspection ES6UnusedImports\nimport STYLE from \"./style.css\"\n\nimport mandalaFragmentShader from \"./mandala.frag\"\nimport mandalaVertexShader from \"./mandala.vert\"\nimport loadImage from \"./loadImage\";\n\nconst PHI = (1 + Math.sqrt(5)) / 2;\nconst TAU = Math.PI * 2;\nconst DEG2RAD_FACTOR = TAU / 360;\n\nconst config = {\n    width: 0,\n    height: 0\n};\n\nlet canvas, gl;\n\n\n// uniform: current time\nlet u_time;\n\nlet u_width;\nlet u_height;\n\nfunction main(time)\n{\n    // update uniforms\n    gl.uniform1f(u_time, time);\n    gl.uniform1f(u_width, config.width);\n    gl.uniform1f(u_height, config.height);\n\n    // Draw the quad\n    gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0);\n\n    requestAnimationFrame(main);\n}\n\n\nconst vertices = [\n    -1, 1, 0.0,\n    -1, -1, 0.0,\n    1, -1, 0.0,\n    1, 1, 0.0\n];\n\nconst indices = [3, 2, 1, 3, 1, 0];\n\nfunction resize(ev)\n{\n    const width = (window.innerWidth) & ~15;\n    const height = (window.innerHeight) | 0;\n\n    config.width = width;\n    config.height = height;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    gl.viewport(0, 0, canvas.width, canvas.height);\n}\n\nwindow.onload = () => {\n\n    canvas = document.getElementById(\"screen\");\n\n    const width = (window.innerWidth) & ~15;\n    const height = (window.innerHeight) | 0;\n\n    config.width = width;\n    config.height = height;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    gl = canvas.getContext(\"webgl\");\n\n    /*========== Defining and storing the geometry =========*/\n\n    // Create an empty buffer object to store vertex buffer\n    const vertex_buffer = gl.createBuffer();\n\n    // Bind appropriate array buffer to it\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertex_buffer);\n\n    // Pass the vertex data to the buffer\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n\n    // Unbind the buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n    // Create an empty buffer object to store Index buffer\n    const Index_Buffer = gl.createBuffer();\n\n    // Bind appropriate array buffer to it\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, Index_Buffer);\n\n    // Pass the vertex data to the buffer\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n\n    // Unbind the buffer\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n    /*====================== Shaders =======================*/\n\n    // Create a vertex shader object\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n\n    // Attach vertex shader source code\n    gl.shaderSource(vertShader, mandalaVertexShader);\n\n    // Compile the vertex shader\n    gl.compileShader(vertShader);\n\n    // Create fragment shader object\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n    // Attach fragment shader source code\n    gl.shaderSource(fragShader, mandalaFragmentShader);\n\n    // Compile the fragment shader\n    gl.compileShader(fragShader);\n\n    let error = false;\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS))\n    {\n        console.error(\"Invalid vertex shader\", gl.getShaderInfoLog(vertShader));\n        error = true;\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS))\n    {\n        console.error(\"Invalid fragment shader\", gl.getShaderInfoLog(fragShader));\n        error = true;\n    }\n\n    if (error)\n    {\n        return;\n    }\n\n    // Create a shader program object to\n    // store the combined shader program\n    const shaderProgram = gl.createProgram();\n\n    // Attach a vertex shader\n    gl.attachShader(shaderProgram, vertShader);\n\n    // Attach a fragment shader\n    gl.attachShader(shaderProgram, fragShader);\n\n    // Link both the programs\n    gl.linkProgram(shaderProgram);\n\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))\n    {\n        console.error(gl.getProgramInfoLog(shaderProgram));\n        return;\n    }\n\n    // get uniform locations\n    u_time = gl.getUniformLocation(shaderProgram, \"time\");\n    u_width = gl.getUniformLocation(shaderProgram, \"width\");\n    u_height = gl.getUniformLocation(shaderProgram, \"height\");\n\n    // Use the combined shader program object\n    gl.useProgram(shaderProgram);\n\n    /* ======= Associating shaders to buffer objects =======*/\n\n    // Bind vertex buffer object\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertex_buffer);\n\n    // Bind index buffer object\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, Index_Buffer);\n\n    // Get the attribute location\n    const coord = gl.getAttribLocation(shaderProgram, \"coordinates\");\n\n    // Point an attribute to the currently bound VBO\n    gl.vertexAttribPointer(coord, 3, gl.FLOAT, false, 0, 0);\n\n    // Enable the attribute\n    gl.enableVertexAttribArray(coord);\n\n    // Clear the canvas\n    gl.clearColor(0,0,0,1);\n\n    // Enable the depth test\n    gl.enable(gl.DEPTH_TEST);\n\n    // Clear the color buffer bit\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Set the view port\n    gl.viewport(0, 0, canvas.width, canvas.height);\n\n    window.addEventListener(\"resize\", resize, true);\n\n    requestAnimationFrame(main);\n};\n\n","export default \"#define GLSLIFY 1\\nattribute vec3 coordinates;\\nvoid main(void) {\\n    gl_Position = vec4(coordinates, 1.0);\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform float time;\\nuniform float width;\\nuniform float height;\\n\\nconst float pi = 3.141592653589793;\\nconst float tau = pi * 2.0;\\nconst float hpi = pi * 0.5;\\n\\nconst float ninth = 1.0/9.0;\\n\\nfloat atan2(in float y, in float x)\\n{\\n    return abs(x) > abs(y) ? hpi - atan(x,y) : atan(y,x);\\n}\\n\\n// Simplex 2D noise\\n//\\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\\n\\nfloat snoise(vec2 v){\\n    const vec4 C = vec4(0.211324865405187, 0.366025403784439,\\n    -0.577350269189626, 0.024390243902439);\\n    vec2 i  = floor(v + dot(v, C.yy) );\\n    vec2 x0 = v -   i + dot(i, C.xx);\\n    vec2 i1;\\n    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n    vec4 x12 = x0.xyxy + C.xxzz;\\n    x12.xy -= i1;\\n    i = mod(i, 289.0);\\n    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\\n    + i.x + vec3(0.0, i1.x, 1.0 ));\\n    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\\n    dot(x12.zw,x12.zw)), 0.0);\\n    m = m*m ;\\n    m = m*m ;\\n    vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n    vec3 h = abs(x) - 0.5;\\n    vec3 ox = floor(x + 0.5);\\n    vec3 a0 = x - ox;\\n    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n    vec3 g;\\n    g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n    return 130.0 * dot(m, g);\\n}\\n\\nconst float interval = 50000.0;\\nconst float third = 1.0/3.0;\\nconst vec4 black = vec4(0,0,0,1);\\nconst vec4 white = vec4(1,1,1,1);\\n\\nvoid main(void) {\\n\\n    float hw = width * 0.5;\\n    float hh = width * 0.5;\\n\\n    float diagonal = sqrt(hw*hw+hh*hh);\\n\\n    float size = min(width, height);\\n\\n    float tx = (gl_FragCoord.x / size) * 2.0 - 1.0;\\n    float ty = 1.0 - (gl_FragCoord.y / size) * 2.0;\\n\\n    if (width < height)\\n    {\\n        ty -= (height - width) / size;\\n    }\\n    else\\n    {\\n        tx -= (width - height) / size;\\n    }\\n\\n    float a = fract(((atan2(ty,tx) + pi) / tau) + mod(time,  interval) / interval);\\n\\n    float a2 = mod(a, ninth) / ninth;\\n\\n    a2 = a2 < 0.5 ? a2 * 2.0 : 1.0 - (a2 - 0.5) * 2.0;\\n\\n    float d = sqrt( tx * tx + ty * ty);\\n\\n    d = d < 1.0 ? d: 1.0 - (d - 1.0);\\n\\n    vec3 color = vec3(a2,d,0);\\n\\n    gl_FragColor = vec4(abs(snoise(vec2(a2 * 0.7 + time * 0.0002,d * 6.0 - time * 0.0005))) > 0.25 /*&& a2 > 0.01 && a2 < 0.99 && mod(d, third) < third * 0.98*/ ? color: color * 0.25, 1);\\n}\\n\\n\";"],"sourceRoot":""}